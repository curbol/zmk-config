#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/sofle.h"

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // Left-hand keys.
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // Thumb keys.

/* Home Row Mods */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
)

/* Encoders */
&left_encoder { steps = <60>; };

&right_encoder { steps = <60>; };

&sensors { triggers-per-rotation = <30>; };

/ {
    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <5 3>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <37 48>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <14 15>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <38 39>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <39 40>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <20 21>;
        };

        semi_colon {
            bindings = <&kp SEMI>;
            key-positions = <46 47>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            bindings = <
&trans  &trans       &trans      &trans       &trans       &trans                                &trans    &trans       &trans       &trans       &trans           &trans
&trans  &kp Q        &kp W       &kp E        &kp R        &kp T                                 &kp Y     &kp U        &kp I        &kp O        &kp P            &trans
&trans  &hml LMETA A &hml LALT S &hml LSHFT D &hml LCTRL F &kp G                                 &kp H     &hmr LCTRL J &hmr RSHFT K &hmr LALT L  &hmr LMETA SQT   &trans
&trans  &kp Z        &kp X       &kp C        &kp V        &kp B        &kp C_PP    &kp C_SLEEP  &kp N     &kp M        &kp COMMA    &kp DOT      &kp FSLH         &trans
                     &trans      &trans       &trans       &lt 1 SPACE  &kp LALT    &kp RSHFT    &lt 2 RET &trans       &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_up_down>;
        };

        lower_layer {
            display-name = "lower";
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans                    &trans           &trans     &trans     &trans       &trans  &trans
&trans  &trans   &kp N7  &kp N8  &kp N9  &trans                    &kp LG(LS(TAB))  &trans     &trans     &kp LG(TAB)  &trans  &trans
&trans  &kp DOT  &kp N4  &kp N5  &kp N6  &trans                    &kp LEFT         &kp DOWN   &kp UP     &kp RIGHT    &trans  &trans
&trans  &kp N0   &kp N1  &kp N2  &kp N3  &trans  &trans    &trans  &kp HOME         &kp PG_DN  &kp PG_UP  &kp END      &trans  &trans
                 &trans  &trans  &trans  &trans  &trans    &trans  &trans           &trans     &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&scroll_up_down>;
        };

        upper_layer {
            display-name = "upper";
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans                    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp CARET  &kp STAR  &kp EXCL  &kp MINUS  &trans                    &trans  &kp COLON  &kp EQUAL  &kp AMPS  &kp DLLR  &trans
&trans  &kp PIPE   &kp LBRC  &kp RBRC  &kp PLUS   &trans                    &trans  &kp GRAVE  &kp LPAR   &kp RPAR  &kp SEMI  &trans
&trans  &kp BSLH   &kp LBKT  &kp RBKT  &kp UNDER  &trans  &trans    &trans  &trans  &kp PRCNT  &kp LT     &kp GT    &kp FSLH  &trans
                   &trans    &trans    &trans     &trans  &trans    &trans  &trans  &trans     &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&scroll_up_down>;
        };

        adjust_layer {
            display-name = "adjust";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                     &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10                    &bt BT_SEL 4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11                    &bt BT_PRV    &trans        &trans        &bt BT_NXT    &trans        &trans
&trans  &trans  &kt F1  &kp F2  &kp F3  &kp F12  &trans    &trans  &bt BT_CLR    &trans        &trans        &trans        &trans        &trans
                &trans  &trans  &trans  &trans   &trans    &trans  &trans        &trans        &trans        &trans
            >;
        };
    };
};
